{"version":3,"sources":["components/Header.jsx","components/Section.jsx","components/Home.jsx","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["Header","useState","burgerStatus","setBurgerStatus","Container","src","alt","href","RightMenu","CustomMenu","onClick","BurgerNav","show","CloseWrapper","CustomClose","styled","div","Menu","MenuIcon","props","CloseIcon","Section","title","description","leftBtnText","rightBtnText","backgroundImg","Wrap","bgImage","bottom","ItemText","Buttons","ButtonGroup","LeftButton","RightButton","DownArrow","img","Home","App","className","fetchCount","amount","Promise","resolve","setTimeout","data","incrementAsync","createAsyncThunk","a","response","counterSlice","createSlice","name","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1795d90.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport styled from 'styled-components';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nfunction Header() {\r\n    const [burgerStatus, setBurgerStatus] = useState(false);\r\n    return (\r\n        <Container>\r\n            <a>\r\n                <img src=\"/images/logo.svg\" alt=\"logo\" />\r\n            </a>\r\n            <Menu>\r\n                <a href=\"#\">Model 3</a>\r\n                <a href=\"#\">Model X</a>\r\n                <a href=\"#\">Model Y</a>\r\n                <a href=\"#\">Model S</a>\r\n                <a href=\"#\">Solar Roofs</a>\r\n                <a href=\"#\">Solar Panels</a>\r\n            </Menu>\r\n            <RightMenu>\r\n                <a href=\"#\" >Shop</a>\r\n                <a href=\"#\" >Tesla Account</a>\r\n                <CustomMenu onClick={() => setBurgerStatus(true) } />\r\n            </RightMenu>\r\n            <BurgerNav show={burgerStatus}>\r\n                <CloseWrapper>\r\n                    <CustomClose onClick={() => setBurgerStatus(false) } />\r\n                </CloseWrapper>\r\n                <li><a href=\"#\">Existing Inventory</a></li>\r\n                <li><a href=\"#\">Used Inventory</a></li>\r\n                <li><a href=\"#\">Trade-in</a></li>\r\n                <li><a href=\"#\">Cybertruck</a></li>\r\n                <li><a href=\"#\">Roadster</a></li>\r\n                <li><a href=\"#\">Test Drive</a></li>\r\n                <li><a href=\"#\">Semi</a></li>\r\n                <li><a href=\"#\">Charging</a></li>\r\n                <li><a href=\"#\">Powerwall</a></li>\r\n                <li><a href=\"#\">Commercial Energy</a></li>\r\n                <li><a href=\"#\">Utilities</a></li>\r\n                <li><a href=\"#\">Find Us</a></li>\r\n                <li><a href=\"#\">Support</a></li>\r\n                <li><a href=\"#\">Investor Relations</a></li>\r\n\r\n            </BurgerNav>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n\r\nconst Container = styled.div`\r\n    min-height: 60px;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    position: fixed;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0 20px;\r\n    z-index: 1;\r\n`\r\nconst Menu = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    a {\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        padding: 0 10px;\r\n        flex-wrap: nowrap;\r\n    }\r\n    @media(max-width: 768px) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nconst RightMenu = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n   a {\r\n        font-weight: 600;\r\n        text-transform: uppercase;\r\n        margin-right: 10px;\r\n    } \r\n`\r\n\r\nconst CustomMenu = styled(MenuIcon)`\r\n    cursor: pointer;\r\n`\r\nconst BurgerNav = styled.div`\r\n    position: fixed;\r\n    top:0;\r\n    bottom:0;\r\n    right:0;\r\n    background-color: white;\r\n    width: 300px;\r\n    z-index: 100000;\r\n    list-style: none;\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: start;\r\n    transform: ${props => props.show ? 'translateX(0)' : 'translateX(100%)'};\r\n    transition: transform 0.2s ease;\r\n    li {\r\n        padding: 15px 0;\r\n        border-bottom: 1px solid rgba(0,0,0,.2);\r\n        a {\r\n            font-weight: 600;\r\n        }\r\n    }\r\n`\r\n\r\nconst CustomClose = styled(CloseIcon)`\r\ncursor: pointer;\r\n`\r\n\r\nconst CloseWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n\r\nfunction Section({title, description, leftBtnText, rightBtnText, backgroundImg}) {\r\n    return (\r\n        <Wrap bgImage={backgroundImg}>\r\n            <Fade bottom>\r\n                <ItemText>\r\n                    <h1>{title}</h1>\r\n                    <p>{description}</p>\r\n                </ItemText>\r\n            </Fade>\r\n            <Buttons>\r\n                <Fade bottom>\r\n                    <ButtonGroup>\r\n                        <LeftButton>\r\n                            {leftBtnText}\r\n                        </LeftButton>\r\n                        \r\n                        {rightBtnText &&\r\n                            <RightButton>\r\n                                {rightBtnText}\r\n                            </RightButton>\r\n                        }\r\n                    </ButtonGroup>\r\n                </Fade>\r\n                <DownArrow src=\"./images/down-arrow.svg\" /> \r\n            </Buttons>\r\n        </Wrap>\r\n    )\r\n}\r\n\r\nexport default Section\r\n\r\nconst Wrap = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-image: ${props => `url(\"./images/${props.bgImage}\")`};\r\n    background-position: center;\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nconst ItemText = styled.div`\r\n    padding-top: 15vh;\r\n    text-align: center;\r\n`\r\n\r\nconst ButtonGroup = styled.div`\r\n    display: flex;\r\n    margin-bottom: 30px;\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n    }\r\n`\r\n\r\nconst LeftButton = styled.div`\r\n    background-color: rgba(23,26,0.8);\r\n    height: 40px;\r\n    width: 256px;\r\n    color: white;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 100px;\r\n    opacity: 0.85;\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n    margin: 8px;\r\n`\r\n\r\nconst RightButton = styled(LeftButton)`\r\n    background: white;\r\n    opacity: 0.65;\r\n    color: black;\r\n`\r\n\r\nconst DownArrow = styled.img`\r\n    height: 40px;\r\n    animation : animateDown infinite 1.5s;\r\n`\r\n\r\nconst Buttons = styled.div`\r\n\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Section from './Section';\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <Section title=\"Model S\" description=\"Order Online for Touchless Delivery\" backgroundImg=\"model-s.jpg\" leftBtnText=\"Custom order\" rightBtnText=\"Existing inventory\" />\r\n            <Section title=\"Model Y\" description=\"Order Online for Touchless Delivery\" backgroundImg=\"model-y.jpg\" leftBtnText=\"Custom order\" rightBtnText=\"Existing inventory\" />\r\n            <Section title=\"Model 3\" description=\"Order Online for Touchless Delivery\" backgroundImg=\"model-3.jpg\" leftBtnText=\"Custom order\" rightBtnText=\"Existing inventory\" />\r\n            <Section title=\"Model X\" description=\"Order Online for Touchless Delivery\" backgroundImg=\"model-x.jpg\" leftBtnText=\"Custom order\" rightBtnText=\"Existing inventory\" />\r\n            <Section title=\"Lowest Cost Solar Panels in America\" description=\"Money-back guarantee\" backgroundImg=\"solar-panel.jpg\" leftBtnText=\"Order Now\" rightBtnText=\"Learn More\" />\r\n            <Section title=\"Solar for New Roofs\" description=\"Solar Roofs Costs Less Than a New Roof Plus Solar Panels\" backgroundImg=\"solar-roof.jpg\" leftBtnText=\"Order Now\" rightBtnText=\"Learn More\" />\r\n            <Section title=\"Accessories\" description=\"\" backgroundImg=\"accessories.jpg\" leftBtnText=\"Shop Now\"  />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Home\r\n\r\n\r\nconst Container = styled.div`\r\n    height: 100vh;\r\n\r\n`","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Home from './components/Home';\r\n\r\nfunction App() {\r\n    return ( \r\n      <div className = \"App\">\r\n        <Header />\r\n        <Home />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;","// A mock function to mimic making an async request for data\r\nexport function fetchCount(amount = 1) {\r\n  return new Promise((resolve) =>\r\n    setTimeout(() => resolve({ data: amount }), 500)\r\n  );\r\n}\r\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { fetchCount } from './counterAPI';\r\n\r\nconst initialState = {\r\n  value: 0,\r\n  status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\nexport const incrementAsync = createAsyncThunk(\r\n  'counter/fetchCount',\r\n  async (amount) => {\r\n    const response = await fetchCount(amount);\r\n    // The value we return becomes the `fulfilled` action payload\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState,\r\n  // The `reducers` field lets us define reducers and generate associated actions\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    // Use the PayloadAction type to declare the contents of `action.payload`\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n  // including actions generated by createAsyncThunk or in other slices.\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(incrementAsync.pending, (state) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(incrementAsync.fulfilled, (state, action) => {\r\n        state.status = 'idle';\r\n        state.value += action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\r\n  const currentValue = selectCount(getState());\r\n  if (currentValue % 2 === 1) {\r\n    dispatch(incrementByAmount(amount));\r\n  }\r\n};\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}